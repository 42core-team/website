name: Build Frontend

on:
  push:
    branches: [main, dev]
    paths:
      - "frontend/**"
      - ".github/workflows/frontend.yml"
  pull_request:
    branches: [main, dev]
    paths:
      - "frontend/**"
      - ".github/workflows/frontend.yml"
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
          - prod
      image_tag:
        description: "Docker image tag to deploy"
        required: true
        default: "latest"
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-frontend

jobs:
  build:
    runs-on: [self-hosted, x64]
    strategy:
      matrix:
        platform: [linux/amd64]
    permissions:
      contents: read
      packages: write
    outputs:
      short_sha: ${{ steps.short-sha.outputs.short_sha }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr,prefix=pr-
            type=sha,format=short

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          platforms: ${{ matrix.platform }}
          push: ${{ github.event_name == 'push' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Extract short SHA for deployment
        id: short-sha
        run: |
          # Extract the short SHA from the tags
          SHORT_SHA=$(echo "${{ steps.meta.outputs.tags }}" | grep -o '[a-f0-9]\{7\}' | head -1)
          if [ -z "$SHORT_SHA" ]; then
            # Fallback to github.sha if short SHA not found
            SHORT_SHA=$(echo "${{ github.sha }}" | cut -c1-7)
          fi
          echo "short_sha=$SHORT_SHA" >> $GITHUB_OUTPUT
          echo "Extracted short SHA: $SHORT_SHA"

      - name: Output image details
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            echo "## ✅ Frontend Image Built and Pushed" >> $GITHUB_STEP_SUMMARY
          else
            echo "## 🔨 Frontend Image Built (Not Pushed)" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Image:** ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}" >> $GITHUB_STEP_SUMMARY
          echo "**Tags:** ${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo "**Short SHA:** ${{ steps.short-sha.outputs.short_sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Event:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          if [ "${{ github.event_name }}" != "push" ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "ℹ️ **Note:** Image was built for testing but not pushed to registry (only pushes on direct commits to main/dev)" >> $GITHUB_STEP_SUMMARY
          fi

  # Deploy job - only runs on push events or manual dispatch
  deploy:
    needs: build
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    uses: ./.github/workflows/frontend-deploy.yml
    with:
      environment: ${{ github.event_name == 'workflow_dispatch' && inputs.environment || (github.ref_name == 'main' && 'prod' || 'dev') }}
      image_tag: ${{ github.event_name == 'workflow_dispatch' && inputs.image_tag || format('sha-{0}', needs.build.outputs.short_sha) }}
    secrets: inherit
