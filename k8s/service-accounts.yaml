# Service Accounts for GitHub Actions
# Apply this to your cluster to create service accounts with tokens

---
# Production Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: github-actions-prod
  namespace: production
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: github-actions-prod
rules:
- apiGroups: [""]
  resources: ["namespaces", "pods", "services", "endpoints", "persistentvolumeclaims", "events", "configmaps", "secrets"]
  verbs: ["*"]
- apiGroups: ["apps"]
  resources: ["deployments", "daemonsets", "replicasets", "statefulsets"]
  verbs: ["*"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["*"]
- apiGroups: ["autoscaling"]
  resources: ["horizontalpodautoscalers"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: github-actions-prod
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: github-actions-prod
subjects:
- kind: ServiceAccount
  name: github-actions-prod
  namespace: production
---
# Token for production service account
apiVersion: v1
kind: Secret
metadata:
  name: github-actions-prod-token
  namespace: production
  annotations:
    kubernetes.io/service-account.name: github-actions-prod
type: kubernetes.io/service-account-token

---
# Staging Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: github-actions-staging
  namespace: staging
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: github-actions-staging
rules:
- apiGroups: [""]
  resources: ["namespaces", "pods", "services", "endpoints", "persistentvolumeclaims", "events", "configmaps", "secrets"]
  verbs: ["*"]
- apiGroups: ["apps"]
  resources: ["deployments", "daemonsets", "replicasets", "statefulsets"]
  verbs: ["*"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["*"]
- apiGroups: ["autoscaling"]
  resources: ["horizontalpodautoscalers"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: github-actions-staging
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: github-actions-staging
subjects:
- kind: ServiceAccount
  name: github-actions-staging
  namespace: staging
---
# Token for staging service account
apiVersion: v1
kind: Secret
metadata:
  name: github-actions-staging-token
  namespace: staging
  annotations:
    kubernetes.io/service-account.name: github-actions-staging
type: kubernetes.io/service-account-token

---
# Development Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: github-actions-dev
  namespace: development
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: github-actions-dev
rules:
- apiGroups: [""]
  resources: ["namespaces", "pods", "services", "endpoints", "persistentvolumeclaims", "events", "configmaps", "secrets"]
  verbs: ["*"]
- apiGroups: ["apps"]
  resources: ["deployments", "daemonsets", "replicasets", "statefulsets"]
  verbs: ["*"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["*"]
- apiGroups: ["autoscaling"]
  resources: ["horizontalpodautoscalers"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: github-actions-dev
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: github-actions-dev
subjects:
- kind: ServiceAccount
  name: github-actions-dev
  namespace: development
---
# Token for development service account
apiVersion: v1
kind: Secret
metadata:
  name: github-actions-dev-token
  namespace: development
  annotations:
    kubernetes.io/service-account.name: github-actions-dev
type: kubernetes.io/service-account-token 